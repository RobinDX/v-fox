diff --git a/dlls/wined3d/directx.c b/dlls/wined3d/directx.c
index 70322e6..188daa1 100644
--- a/dlls/wined3d/directx.c
+++ b/dlls/wined3d/directx.c
@@ -4367,6 +4367,21 @@ BOOL InitAdapters(IWineD3DImpl *This)
         adapter->driver = "Display";
         adapter->description = "Direct3D HAL";
 
+        /* Use VideoDriver registry setting when set */
+        if(wined3d_settings.video_driver) {
+            adapter->driver = wined3d_settings.video_driver;
+        } else {
+            adapter->driver = "Display";
+        }
+
+        /* Use VideoDescription registry setting when set */
+        if(wined3d_settings.video_description) {
+            adapter->description = wined3d_settings.video_description;
+        } else {
+            adapter->description = "Direct3D HAL";
+        }
+
+
         /* Use the VideoRamSize registry setting when set */
         if(wined3d_settings.emulated_textureram)
             adapter->TextureRam = wined3d_settings.emulated_textureram;
@@ -4549,6 +4564,23 @@ nogl_adapter:
 
     This->adapters[0].driver = "Display";
     This->adapters[0].description = "WineD3D DirectDraw Emulation";
+
+    /* Use VideoDriver registry setting when set */
+    if(wined3d_settings.video_driver) {
+        This->adapters[0].driver = wined3d_settings.video_driver;
+    } else {
+        This->adapters[0].driver = "Display";
+    }
+
+    /* Use VideoDescription registry setting when set */
+    if(wined3d_settings.video_description) {
+        This->adapters[0].description = wined3d_settings.video_description;
+    } else {
+        This->adapters[0].description = "WineD3D DirectDraw Emulation";
+    }
+
+    /* Use VideoRamSize registry setting when set */
+
     if(wined3d_settings.emulated_textureram) {
         This->adapters[0].TextureRam = wined3d_settings.emulated_textureram;
     } else {
diff --git a/dlls/wined3d/wined3d_main.c b/dlls/wined3d/wined3d_main.c
index 687fe89..0f7e160 100644
--- a/dlls/wined3d/wined3d_main.c
+++ b/dlls/wined3d/wined3d_main.c
@@ -304,6 +304,18 @@ static BOOL wined3d_init(HINSTANCE hInstDLL)
                 wined3d_settings.allow_multisampling = TRUE;
             }
         }
+	if ( !get_config_key( hkey, appkey, "VideoDriver", buffer, size) )
+	{
+		TRACE("Video Driver name: %s\n",buffer);
+		wined3d_settings.video_driver = HeapAlloc(GetProcessHeap(), 0, strlen(buffer) + 1);
+		if(wined3d_settings.video_driver ) strcpy(wined3d_settings.video_driver, buffer);
+	}
+	if ( !get_config_key( hkey, appkey, "VideoDescription", buffer, size) )
+	{
+		TRACE("Video Description: %s\n",buffer);
+		wined3d_settings.video_description = HeapAlloc(GetProcessHeap(), 0, strlen(buffer) + 1);
+		if(wined3d_settings.video_description ) strcpy(wined3d_settings.video_description, buffer);
+	}
     }
     if (wined3d_settings.vs_mode == VS_HW)
         TRACE("Allow HW vertex shaders\n");
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index ff03d3d..81147ba 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -289,6 +289,8 @@ typedef struct wined3d_settings_s {
 /* Memory tracking and object counting */
   unsigned int emulated_textureram;
   char *logo;
+  char *video_driver;
+  char *video_description;
   int allow_multisampling;
 } wined3d_settings_t;
 
 
